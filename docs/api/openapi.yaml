openapi: 3.1.0
info:
  title: Student Course Enrollment System API
  description: RESTful API for managing student course enrollments with timetable clash detection
  version: 1.0.0
  contact:
    name: API Support
    email: support@studentenrollment.com
  license:
    name: ISC
    url: https://opensource.org/licenses/ISC

servers:
  - url: http://localhost:3000/api
    description: Development server
  - url: https://api.studentenrollment.com/api
    description: Production server

tags:
  - name: Authentication
    description: User authentication endpoints
  - name: Students
    description: Student operations
  - name: Enrollments
    description: Course enrollment management
  - name: Courses
    description: Course information
  - name: Admin
    description: Administrative operations

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Error:
      type: object
      properties:
        success:
          type: boolean
          default: false
        message:
          type: string
        errors:
          type: array
          items:
            type: object
        timestamp:
          type: string
          format: date-time

    Success:
      type: object
      properties:
        success:
          type: boolean
          default: true
        message:
          type: string
        data:
          type: object
        timestamp:
          type: string
          format: date-time

    User:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
          format: email
        role:
          type: string
          enum: [student, college_admin]

    Student:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        studentNumber:
          type: string
        college:
          $ref: '#/components/schemas/College'

    College:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        code:
          type: string

    Course:
      type: object
      properties:
        id:
          type: integer
        code:
          type: string
        name:
          type: string
        description:
          type: string
        collegeId:
          type: integer
        timetables:
          type: array
          items:
            $ref: '#/components/schemas/Timetable'

    Timetable:
      type: object
      properties:
        id:
          type: integer
        dayOfWeek:
          type: integer
          minimum: 1
          maximum: 7
        startTime:
          type: string
          format: time
        endTime:
          type: string
          format: time

    Enrollment:
      type: object
      properties:
        id:
          type: integer
        studentId:
          type: integer
        courseId:
          type: integer
        course:
          $ref: '#/components/schemas/Course'
        createdAt:
          type: string
          format: date-time

    PaginationMeta:
      type: object
      properties:
        pagination:
          type: object
          properties:
            page:
              type: integer
            limit:
              type: integer
            total:
              type: integer
            totalPages:
              type: integer
            hasNextPage:
              type: boolean
            hasPrevPage:
              type: boolean

paths:
  /auth/register:
    post:
      tags:
        - Authentication
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
                - confirmPassword
                - role
                - name
                - collegeId
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  minLength: 8
                confirmPassword:
                  type: string
                role:
                  type: string
                  enum: [student, college_admin]
                name:
                  type: string
                collegeId:
                  type: integer
                studentNumber:
                  type: string
                  description: Required for students
      responses:
        '201':
          description: Registration successful
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Success'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          user:
                            $ref: '#/components/schemas/User'
                          accessToken:
                            type: string
                          refreshToken:
                            type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/login:
    post:
      tags:
        - Authentication
      summary: Login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Success'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          user:
                            $ref: '#/components/schemas/User'
                          accessToken:
                            type: string
                          refreshToken:
                            type: string
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/me:
    get:
      tags:
        - Authentication
      summary: Get current user info
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User information
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Success'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /students/profile:
    get:
      tags:
        - Students
      summary: Get student profile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Student profile
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Success'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Student'

  /students/courses:
    get:
      tags:
        - Students
      summary: Get enrolled courses
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: List of enrolled courses
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Success'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Course'
                      meta:
                        $ref: '#/components/schemas/PaginationMeta'

  /enrollments:
    post:
      tags:
        - Enrollments
      summary: Enroll in courses
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - courseIds
              properties:
                courseIds:
                  type: array
                  items:
                    type: integer
                  minItems: 1
      responses:
        '201':
          description: Enrollment successful
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Success'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          enrolled:
                            type: array
                            items:
                              type: object
                          failed:
                            type: array
                            items:
                              type: object
        '409':
          description: Timetable conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    get:
      tags:
        - Enrollments
      summary: Get my enrollments
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of enrollments
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Success'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Enrollment'

  /courses:
    get:
      tags:
        - Courses
      summary: Get all courses
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            default: 20
        - in: query
          name: search
          schema:
            type: string
        - in: query
          name: collegeId
          schema:
            type: integer
      responses:
        '200':
          description: List of courses
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Success'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Course'
                      meta:
                        $ref: '#/components/schemas/PaginationMeta'

  /admin/courses:
    post:
      tags:
        - Admin
      summary: Create a new course
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - code
                - name
              properties:
                code:
                  type: string
                  pattern: '^[A-Z]{2,4}[0-9]{3,4}$'
                name:
                  type: string
                description:
                  type: string
      responses:
        '201':
          description: Course created
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Success'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Course'
        '409':
          description: Course code already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

security:
  - bearerAuth: []
